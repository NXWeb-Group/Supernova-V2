---
export const prerender = false

if (process.env.AI !== 'true') {
  return Astro.redirect('/')
}

import Navbar from '../layouts/navAccount.astro'
import Chats from '../components/ai/ChatBox.vue'
import Rooms from '../components/ai/Roombox.vue'
import { getAccountById } from '../lib/account'
import Loader from '../components/loader.astro'
import type { ObjectId } from 'mongodb'

let rooms
const accountid = await Astro.session?.get('userid')
let num = await Astro.session?.get('numchat')

if (!num) {
  Astro.session?.set('numchat', 0)
  num = 0
}

if (!accountid) {
  rooms = undefined
} else {
  const account = await getAccountById(accountid, { _id: 0, rooms: 1 })

  interface Chat {
    ai: boolean
    text: string
  }

  interface Room {
    roomid: ObjectId
    name: string
    chats: Chat[]
  }

  rooms = account
    ? account.rooms.map((room: Room) => ({
        roomid: room.roomid.toString(),
        name: room.name,
      }))
    : undefined
}
---

<Navbar>
  <div class="h-full flex flex-col bg-gray-700 overflow-hidden">
    <div class="flex-1 flex overflow-hidden">
      <Chats chats={num} max={Number(process.env.MAX_CHATS)} client:load>
        <Loader size="30" />
      </Chats>
      <Rooms rooms={rooms} client:load />
    </div>
  </div>
</Navbar>
